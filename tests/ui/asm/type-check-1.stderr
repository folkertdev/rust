error[E0435]: attempt to use a non-constant value in a constant
  --> $DIR/type-check-1.rs:41:26
   |
LL |         asm!("{}", const x);
   |                          ^ non-constant value
   |
help: consider using `const` instead of `let`
   |
LL |         const x: /* Type */ = 0;
   |         ~~~~~  ++++++++++++

error[E0435]: attempt to use a non-constant value in a constant
  --> $DIR/type-check-1.rs:44:36
   |
LL |         asm!("{}", const const_foo(x));
   |                                    ^ non-constant value
   |
help: consider using `const` instead of `let`
   |
LL |         const x: /* Type */ = 0;
   |         ~~~~~  ++++++++++++

error[E0435]: attempt to use a non-constant value in a constant
  --> $DIR/type-check-1.rs:47:36
   |
LL |         asm!("{}", const const_bar(x));
   |                                    ^ non-constant value
   |
help: consider using `const` instead of `let`
   |
LL |         const x: /* Type */ = 0;
   |         ~~~~~  ++++++++++++

error: invalid `sym` operand
  --> $DIR/type-check-1.rs:49:24
   |
LL |         asm!("{}", sym x);
   |                        ^ is a local variable
   |
   = help: `sym` operands must refer to either a function or a static

error: invalid asm output
  --> $DIR/type-check-1.rs:14:29
   |
LL |         asm!("{}", out(reg) 1 + 2);
   |                             ^^^^^ cannot assign to this expression

error: invalid asm output
  --> $DIR/type-check-1.rs:16:31
   |
LL |         asm!("{}", inout(reg) 1 + 2);
   |                               ^^^^^ cannot assign to this expression

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:22:28
   |
LL |         asm!("{}", in(reg) v[..]);
   |                            ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:25:29
   |
LL |         asm!("{}", out(reg) v[..]);
   |                             ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:28:31
   |
LL |         asm!("{}", inout(reg) v[..]);
   |                               ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:22:28
   |
LL |         asm!("{}", in(reg) v[..]);
   |                            ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:25:29
   |
LL |         asm!("{}", out(reg) v[..]);
   |                             ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:28:31
   |
LL |         asm!("{}", inout(reg) v[..]);
   |                               ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: invalid type for `const` operand
  --> $DIR/type-check-1.rs:57:20
   |
LL |         asm!("{}", const 0f32);
   |                    ^^^^^^----
   |                          |
   |                          is an `f32`
   |
   = help: `const` operands must be of an integer type

error: invalid type for `const` operand
  --> $DIR/type-check-1.rs:59:20
   |
LL |         asm!("{}", const 0 as *mut u8);
   |                    ^^^^^^------------
   |                          |
   |                          is a `*mut u8`
   |
   = help: `const` operands must be of an integer type

error: invalid type for `const` operand
  --> $DIR/type-check-1.rs:62:20
   |
LL |         asm!("{}", const &0);
   |                    ^^^^^^--
   |                          |
   |                          is a `&i32`
   |
   = help: `const` operands must be of an integer type

error: invalid type for `const` operand
  --> $DIR/type-check-1.rs:76:19
   |
LL | global_asm!("{}", const 0f32);
   |                   ^^^^^^----
   |                         |
   |                         is an `f32`
   |
   = help: `const` operands must be of an integer type

error: invalid type for `const` operand
  --> $DIR/type-check-1.rs:78:19
   |
LL | global_asm!("{}", const 0 as *mut u8);
   |                   ^^^^^^------------
   |                         |
   |                         is a `*mut u8`
   |
   = help: `const` operands must be of an integer type

error: aborting due to 17 previous errors

Some errors have detailed explanations: E0277, E0435.
For more information about an error, try `rustc --explain E0277`.
